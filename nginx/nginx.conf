events {
    worker_connections 1024;
}

http {
    # Logging
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" "$http_user_agent"';
    access_log /var/log/nginx/access.log main;
    error_log /var/log/nginx/error.log warn;

    # Rate limiting (5 request per second per IP)
    limit_req_zone $binary_remote_addr zone=mylimit:10m rate=5r/s;

    # Gzip compression
    gzip on;
    gzip_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript;
    gzip_min_length 256;

    server {
        listen 80;

        location /web/ {
            proxy_pass http://web_fastapi:80/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

            # Apply rate limit
            limit_req zone=mylimit burst=10 nodelay;
        }

        location /new/ {
            proxy_pass http://new_service_fastapi:8001/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

            # Apply rate limit
            limit_req zone=mylimit burst=10 nodelay;
        }
    }
}
